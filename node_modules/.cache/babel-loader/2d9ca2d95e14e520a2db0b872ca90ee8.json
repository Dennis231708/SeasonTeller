{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/denniswells/Desktop/Projects/seasons/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      lat: null,\n      errorMessage: ''\n    };\n  }\n\n  componentDidMount() {\n    window.navigator.geolocation.getCurrentPosition(position => {\n      // TO UPDATE STATE OBJECT YOU NEED TO USE SETSTATE\n      this.setState({\n        lat: position.coords.latitude\n      });\n    }, err => {\n      this.setState({\n        errorMessage: err.message\n      });\n    });\n  }\n\n  // render is required to be defined by react\n  render() {\n    if (this.state.errorMessage && !this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", this.state.errorMessage]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 20\n      }, this);\n    } else if (!this.state.errorMessage && this.state.lat) {\n      return /*#__PURE__*/_jsxDEV(SeasonDisplay, {\n        lat: this.state.lat\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Loading!\", /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"notched circle loading icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 20\n    }, this);\n  }\n\n}\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 37,\n  columnNumber: 17\n}, this), document.querySelector('#root'));","map":{"version":3,"sources":["/Users/denniswells/Desktop/Projects/seasons/src/index.js"],"names":["React","ReactDOM","SeasonDisplay","App","Component","state","lat","errorMessage","componentDidMount","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","render","document","querySelector"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAGA,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAE9BC,KAF8B,GAEtB;AAACC,MAAAA,GAAG,EAAE,IAAN;AAAYC,MAAAA,YAAY,EAAE;AAA1B,KAFsB;AAAA;;AAI9BC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,SAAP,CAAiBC,WAAjB,CAA6BC,kBAA7B,CACKC,QAAD,IAAc;AACV;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,GAAG,EAAEO,QAAQ,CAACE,MAAT,CAAgBC;AAAtB,OAAd;AACH,KAJL,EAKKC,GAAD,IAAS;AACL,WAAKH,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAEU,GAAG,CAACC;AAAnB,OAAd;AACH,KAPL;AASH;;AAED;AACAC,EAAAA,MAAM,GAAG;AACL,QAAG,KAAKd,KAAL,CAAWE,YAAX,IAA2B,CAAC,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC1C,0BAAO;AAAA,8BAAa,KAAKD,KAAL,CAAWE,YAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACP,KAFG,MAGK,IAAG,CAAC,KAAKF,KAAL,CAAWE,YAAZ,IAA4B,KAAKF,KAAL,CAAWC,GAA1C,EAA8C;AAC/C,0BAAO,QAAC,aAAD;AAAe,QAAA,GAAG,EAAE,KAAKD,KAAL,CAAWC;AAA/B;AAAA;AAAA;AAAA;AAAA,cAAP;AACP;;AACO,wBAAO;AAAA,0CAAa;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAGP;;AA3B6B;;AA+BlCL,QAAQ,CAACkB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAzB","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport SeasonDisplay from './SeasonDisplay';\n\n\nclass App extends React.Component {\n    // constructor alawys has props\n    state = {lat: null, errorMessage: ''};\n\n    componentDidMount() {\n        window.navigator.geolocation.getCurrentPosition(\n            (position) => {\n                // TO UPDATE STATE OBJECT YOU NEED TO USE SETSTATE\n                this.setState({lat: position.coords.latitude});\n            },\n            (err) => {\n                this.setState({errorMessage: err.message});\n            }\n        );\n    };\n\n    // render is required to be defined by react\n    render() {\n        if(this.state.errorMessage && !this.state.lat){\n            return <div>Error: {this.state.errorMessage}</div>;\n    }\n        else if(!this.state.errorMessage && this.state.lat){\n            return <SeasonDisplay lat={this.state.lat} />\n    }\n            return <div>Loading!<i class=\"notched circle loading icon\"></i>\n            </div>;\n    \n    }\n}\n\n\nReactDOM.render(<App />, document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}